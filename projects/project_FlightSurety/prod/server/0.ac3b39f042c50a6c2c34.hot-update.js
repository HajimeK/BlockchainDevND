exports.id=0,exports.modules={"./src/server/index.js":function(e,s,r){"use strict";r.r(s);var t=r("http"),o=r.n(t),n=r("./src/server/server.js");const l=o.a.createServer(n.default);let i=n.default;l.listen(3e3),e.hot.accept("./src/server/server.js",function(e){n=r("./src/server/server.js"),l.removeListener("request",i),l.on("request",n.default),i=n.default}.bind(this))},"./src/server/server.js":function(e,s,r){"use strict";r.r(s);var t=r("./build/contracts/FlightSuretyApp.json"),o=r("./src/server/config.json"),n=r("web3"),l=r.n(n),i=r("express"),a=r.n(i);const c=r("bignumber.js");let u=o.localhost,g=new l.a(new l.a.providers.WebsocketProvider(u.url.replace("http","ws")));g.eth.defaultAccount=g.eth.accounts[0];let d=new g.eth.Contract(t.abi,u.appAddress);let f={};g.eth.defaultAccount=g.eth.accounts[0];let h=new(r("sqlite3").verbose().Database)(":memory:",e=>{if(e)return console.error(e.message);console.log("Connected to the in-memory SQlite database."),h.run("CREATE TABLE flight (flightKey INTEGER PRIMARY KEY, status INTEGER NOT NULL)")});d.events.eventRegisterFlight({fromBlock:0},(function(e,s){if(e)console.log(e);else{console.log(s);s.returnValues.flightKey;const e=0;h.run("INSERT INTO flight ("+flightKen+" , "+e+")")}})),d.events.eventApprovedAirline({fromBlock:0},(async function(e,s){if(e)console.log(e);else{console.log(s);const e=s.returnValues.index,r=s.returnValues.airline;let t=c(await d.methods.getRegistrationFee().call()).toString();d.methods.registerOracle().send({from:r,value:t,gas:4e6}).then(s=>{d.methods.getMyIndexes().call({from:r}).then(s=>{f[r]=e,console.log("Oracle registered: "+r+" indices:"+e)})}).catch(e=>{console.log("Error while registering oracles: "+r+" Error: "+e)})}})),getRandomIndex(airlineAccount),airlineAccount,d.events.OracleRequest({fromBlock:0},(function(e,s){if(e)console.log(e);else{console.log(s);const e=s.returnValues.index,t=s.returnValues.airline,o=s.returnValues.flight,n=s.returnValues.timestamp;for(var r in f){if(f[r].includes(e)){let s=20;d.methods.submitOracleResponse(e,t,o,n,s).send({from:r,gas:1e6}).then(r=>{console.log("Oracle response sent with statuscode: "+s+" for "+o+" and index:"+e)}).catch(e=>{console.log("Error while sending Oracle response  for "+o+" Error:"+e)})}}}}));const p=a()();p.get("/api",(e,s)=>{s.send({message:"An API for use with your Dapp!"})}),p.get("/api/GetFlightsByPassenger",(e,s)=>{console.log(e.query.passenger),s.send({message:"An API for use with your Dapp!"})}),p.get("/api/GetFlightsByAirline",(e,s)=>{console.log(e.query.airline),s.send({message:"An API for use with your Dapp!"})}),p.get("/api/GetFlightStatus",(e,s)=>{console.log(e.query.airline),console.log(e.query.flight),s.send({message:"An API for use with your Dapp!"})}),s.default=p}};