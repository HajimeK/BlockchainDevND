{
  "contractName": "FlightSuretyData",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAirline",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPassenger",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addAirline",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceAirline",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePassenger",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPassenger",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PassengerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PassengerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AirlineAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AirlineRemoved",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOperational",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "mode",
          "type": "bool"
        }
      ],
      "name": "setOperatingStatus",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registerAirline",
      "outputs": [],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "buy",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "creditInsurees",
      "outputs": [],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pay",
      "outputs": [],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAirline\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"mode\",\"type\":\"bool\"}],\"name\":\"setOperatingStatus\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPassenger\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creditInsurees\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addAirline\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceAirline\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registerAirline\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renouncePassenger\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOperational\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPassenger\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PassengerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PassengerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AirlineAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AirlineRemoved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"buy()\":{\"details\":\"Buy insurance for a flight    \"},\"constructor\":{\"details\":\"Constructor     The deploying account becomes contractOwner\"},\"creditInsurees()\":{\"details\":\"Credits payouts to insurees\"},\"fund()\":{\"details\":\"Initial funding for the insurance. Unless there are too many delayed flights     resulting in insurance payouts, the contract should be self-sustaining    \"},\"isOperational()\":{\"details\":\"Get operating status of contract\",\"return\":\"A bool that is the current operating status\"},\"pay()\":{\"details\":\"Transfers eligible payout funds to insuree    \"},\"registerAirline()\":{\"details\":\"Add an airline to the registration queue     Can only be called from FlightSuretyApp contract    \"},\"setOperatingStatus(bool)\":{\"details\":\"Sets contract operations on/off    * When operational mode is disabled, all write transactions except for this one will fail\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/hajime/git/BlockchainDevND/projects/project_FlightSurety/contracts/FlightSuretyData.sol\":\"FlightSuretyData\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/hajime/git/BlockchainDevND/projects/project_FlightSurety/contracts/FlightSuretyData.sol\":{\"keccak256\":\"0x67f269c2d1c8fa839b8a8e70b694d33565a165e521a95a3b5a6a93171a796c6b\",\"urls\":[\"bzzr://b23f79042b2232dea87b404bc3b7ae0d25314147bd3f3ec9d8fe64c92a2cfa07\"]},\"/home/hajime/git/BlockchainDevND/projects/project_FlightSurety/contracts/accesscontrol/AirlineRole.sol\":{\"keccak256\":\"0xb2cad76b4035aad58a08d3ccd248bc71cc20079cb7dede6cb51499b690d3c11f\",\"urls\":[\"bzzr://c940b8e94d5265ed9b709ed43ae3899f4b44b581b0c2f26d627284cb21ca5292\"]},\"/home/hajime/git/BlockchainDevND/projects/project_FlightSurety/contracts/accesscontrol/PassengerRole.sol\":{\"keccak256\":\"0x8b0ebf3b30cedaaa075e5a7e76d19e68cfee2682dbdf52bdb8e16cb553f03003\",\"urls\":[\"bzzr://f7b2a8986b08f170f2ff37cedae77927630d1b71a7057507017d7a636bec399a\"]},\"/home/hajime/git/BlockchainDevND/projects/project_FlightSurety/contracts/accesscontrol/Roles.sol\":{\"keccak256\":\"0x9301f92dbe4bfa608ade1238ca898574ac76f4a9be246e867a9762c49d1dcf41\",\"urls\":[\"bzzr://41dcef65c10efa5005a1402ecdd02ca1eae4baa57af13701c8ac33a4f5c4b0f0\"]},\"/home/hajime/git/BlockchainDevND/projects/project_FlightSurety/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]}},\"version\":1}",
  "bytecode": "0x60806040526001600260146101000a81548160ff021916908315150217905550600460035534801561003057600080fd5b506100403361009560201b60201c565b61004f336100f360201b60201c565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610295565b6100ad81600061015160201b61071f1790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167fb55d65ff58a8ae5e1643396e49a8aa01aec7a0766f887812148a230464a41c8f60405160405180910390a250565b61010b81600161015160201b61071f1790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f621e907b0b61084a1f2660c5627f80111a59ab9291ce55345a6145057946e9cc60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561018b57600080fd5b61019b828261020360201b60201c565b156101a557600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561023e57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6108c7806102a46000396000f3fe6080604052600436106100c25760003560e01c80634c17241e1161007f578063a6f2ae3a11610059578063a6f2ae3a1461029f578063b60d4288146102a9578063cd905dff146102b3578063ec0004f9146102e2576100c2565b80634c17241e1461025a57806363e29a3f146102715780639bbd776814610288576100c2565b80630e248a11146100cc578063110466ed146101355780631b9265b8146101725780631dd13a1d1461018957806336cee484146101f25780633a0295d114610209575b6100ca610333565b005b3480156100d857600080fd5b5061011b600480360360208110156100ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610335565b604051808215151515815260200191505060405180910390f35b34801561014157600080fd5b506101706004803603602081101561015857600080fd5b81019080803515159060200190929190505050610352565b005b34801561017e57600080fd5b50610187610432565b005b34801561019557600080fd5b506101d8600480360360208110156101ac57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610434565b604051808215151515815260200191505060405180910390f35b3480156101fe57600080fd5b50610207610451565b005b34801561021557600080fd5b506102586004803603602081101561022c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610453565b005b34801561026657600080fd5b5061026f610471565b005b34801561027d57600080fd5b5061028661047c565b005b34801561029457600080fd5b5061029d6104e3565b005b6102a76104ee565b005b6102b1610333565b005b3480156102bf57600080fd5b506102c86104f0565b604051808215151515815260200191505060405180910390f35b3480156102ee57600080fd5b506103316004803603602081101561030557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610507565b005b565b600061034b82600061052590919063ffffffff16565b9050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616c6c6572206973206e6f7420636f6e7472616374206f776e65720000000081525060200191505060405180910390fd5b80600260146101000a81548160ff02191690831515021790555050565b565b600061044a82600161052590919063ffffffff16565b9050919050565b565b61045c33610335565b61046557600080fd5b61046e816105b7565b50565b61047a33610611565b565b600260149054906101000a900460ff166104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806108776025913960400191505060405180910390fd5b565b6104ec3361066b565b565b565b6000600260149054906101000a900460ff16905090565b61051033610434565b61051957600080fd5b610522816106c5565b50565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561056057600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6105cb81600061071f90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fb55d65ff58a8ae5e1643396e49a8aa01aec7a0766f887812148a230464a41c8f60405160405180910390a250565b6106258160006107cb90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f30b877178d01ecce7800e37cb6dfbaad2e641045ee2ba52a50458ca4205bafbf60405160405180910390a250565b61067f8160016107cb90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f97444fa4b41e1f5173a20f39d2102723bc0067ea6342d82913e0b07dc7b19a3d60405160405180910390a250565b6106d981600161071f90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f621e907b0b61084a1f2660c5627f80111a59ab9291ce55345a6145057946e9cc60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561075957600080fd5b6107638282610525565b1561076d57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561080557600080fd5b61080f8282610525565b61081857600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe436f6e74726163742069732063757272656e746c79206e6f74206f7065726174696f6e616ca165627a7a723058207ee459633930f57444f1a9fda5cc2824c782ba2f25366e8b8af2ef19c03a90770029",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c80634c17241e1161007f578063a6f2ae3a11610059578063a6f2ae3a1461029f578063b60d4288146102a9578063cd905dff146102b3578063ec0004f9146102e2576100c2565b80634c17241e1461025a57806363e29a3f146102715780639bbd776814610288576100c2565b80630e248a11146100cc578063110466ed146101355780631b9265b8146101725780631dd13a1d1461018957806336cee484146101f25780633a0295d114610209575b6100ca610333565b005b3480156100d857600080fd5b5061011b600480360360208110156100ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610335565b604051808215151515815260200191505060405180910390f35b34801561014157600080fd5b506101706004803603602081101561015857600080fd5b81019080803515159060200190929190505050610352565b005b34801561017e57600080fd5b50610187610432565b005b34801561019557600080fd5b506101d8600480360360208110156101ac57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610434565b604051808215151515815260200191505060405180910390f35b3480156101fe57600080fd5b50610207610451565b005b34801561021557600080fd5b506102586004803603602081101561022c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610453565b005b34801561026657600080fd5b5061026f610471565b005b34801561027d57600080fd5b5061028661047c565b005b34801561029457600080fd5b5061029d6104e3565b005b6102a76104ee565b005b6102b1610333565b005b3480156102bf57600080fd5b506102c86104f0565b604051808215151515815260200191505060405180910390f35b3480156102ee57600080fd5b506103316004803603602081101561030557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610507565b005b565b600061034b82600061052590919063ffffffff16565b9050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610415576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616c6c6572206973206e6f7420636f6e7472616374206f776e65720000000081525060200191505060405180910390fd5b80600260146101000a81548160ff02191690831515021790555050565b565b600061044a82600161052590919063ffffffff16565b9050919050565b565b61045c33610335565b61046557600080fd5b61046e816105b7565b50565b61047a33610611565b565b600260149054906101000a900460ff166104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806108776025913960400191505060405180910390fd5b565b6104ec3361066b565b565b565b6000600260149054906101000a900460ff16905090565b61051033610434565b61051957600080fd5b610522816106c5565b50565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561056057600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6105cb81600061071f90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fb55d65ff58a8ae5e1643396e49a8aa01aec7a0766f887812148a230464a41c8f60405160405180910390a250565b6106258160006107cb90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f30b877178d01ecce7800e37cb6dfbaad2e641045ee2ba52a50458ca4205bafbf60405160405180910390a250565b61067f8160016107cb90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f97444fa4b41e1f5173a20f39d2102723bc0067ea6342d82913e0b07dc7b19a3d60405160405180910390a250565b6106d981600161071f90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f621e907b0b61084a1f2660c5627f80111a59ab9291ce55345a6145057946e9cc60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561075957600080fd5b6107638282610525565b1561076d57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561080557600080fd5b61080f8282610525565b61081857600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505056fe436f6e74726163742069732063757272656e746c79206e6f74206f7065726174696f6e616ca165627a7a723058207ee459633930f57444f1a9fda5cc2824c782ba2f25366e8b8af2ef19c03a90770029",
  "sourceMap": "226:5078:1:-;;;753:4;726:31;;;;;;;;;;;;;;;;;;;;883:1;860:24;;1623:77;8:9:-1;5:2;;;30:1;27;20:12;5:2;1623:77:1;627:23:3;639:10;627:11;;;:23;;:::i;:::-;641:25:4;655:10;641:13;;;:25;;:::i;:::-;1683:10:1;1667:13;;:26;;;;;;;;;;;;;;;;;;226:5078;;1348:111:3;1401:21;1414:7;1401:8;:12;;;;;;:21;;;;:::i;:::-;1446:7;1433:21;;;;;;;;;;;;1348:111;:::o;1392:117:4:-;1447:23;1462:7;1447:10;:14;;;;;;:23;;;;:::i;:::-;1496:7;1481:23;;;;;;;;;;;;1392:117;:::o;296:167:5:-;387:1;368:21;;:7;:21;;;;360:30;;;;;;405:18;409:4;415:7;405:3;;;:18;;:::i;:::-;404:19;396:28;;;;;;454:4;431;:11;;:20;443:7;431:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;296:167;;:::o;777:166::-;861:4;902:1;883:21;;:7;:21;;;;875:30;;;;;;918:4;:11;;:20;930:7;918:20;;;;;;;;;;;;;;;;;;;;;;;;;911:27;;777:166;;;;:::o;226:5078:1:-;;;;;;;",
  "deployedSourceMap": "226:5078:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5287:6;:4;:6::i;:::-;226:5078;869:102:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;869:102:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;869:102:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3551:138:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3551:138:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3551:138:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;4568:56;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4568:56:1;;;:::i;:::-;;891:106:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;891:106:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;891:106:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4412:67:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4412:67:1;;;:::i;:::-;;1031:87:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1031:87:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1031:87:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;1185:71;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1185:71:3;;;:::i;:::-;;4125:97:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4125:97:1;;;:::i;:::-;;1221:75:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1221:75:4;;;:::i;:::-;;4290:60:1;;;:::i;:::-;;4823:58;;;:::i;:::-;;3272:114;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3272:114:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1059:93:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1059:93:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1059:93:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;4823:58:1;:::o;869:102:3:-;926:4;945:21;958:7;945:8;:12;;:21;;;;:::i;:::-;938:28;;869:102;;;:::o;3551:138:1:-;2781:13;;;;;;;;;;;2767:27;;:10;:27;;;2759:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3678:4;3664:11;;:18;;;;;;;;;;;;;;;;;;3551:138;:::o;4568:56::-;:::o;891:106:4:-;950:4;969:23;984:7;969:10;:14;;:23;;;;:::i;:::-;962:30;;891:106;;;:::o;4412:67:1:-;:::o;1031:87:3:-;777:21;787:10;777:9;:21::i;:::-;769:30;;;;;;1093:20;1105:7;1093:11;:20::i;:::-;1031:87;:::o;1185:71::-;1225:26;1240:10;1225:14;:26::i;:::-;1185:71::o;4125:97:1:-;2446:11;;;;;;;;;;;2438:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4125:97::o;1221:75:4:-;1263:28;1280:10;1263:16;:28::i;:::-;1221:75::o;4290:60:1:-;:::o;3272:114::-;3341:4;3368:11;;;;;;;;;;;3361:18;;3272:114;:::o;1059:93:4:-;795:23;807:10;795:11;:23::i;:::-;787:32;;;;;;1125:22;1139:7;1125:13;:22::i;:::-;1059:93;:::o;777:166:5:-;861:4;902:1;883:21;;:7;:21;;;;875:30;;;;;;918:4;:11;;:20;930:7;918:20;;;;;;;;;;;;;;;;;;;;;;;;;911:27;;777:166;;;;:::o;1348:111:3:-;1401:21;1414:7;1401:8;:12;;:21;;;;:::i;:::-;1446:7;1433:21;;;;;;;;;;;;1348:111;:::o;1560:119::-;1616:24;1632:7;1616:8;:15;;:24;;;;:::i;:::-;1666:7;1651:23;;;;;;;;;;;;1560:119;:::o;1614:125:4:-;1672:26;1690:7;1672:10;:17;;:26;;;;:::i;:::-;1726:7;1709:25;;;;;;;;;;;;1614:125;:::o;1392:117::-;1447:23;1462:7;1447:10;:14;;:23;;;;:::i;:::-;1496:7;1481:23;;;;;;;;;;;;1392:117;:::o;296:167:5:-;387:1;368:21;;:7;:21;;;;360:30;;;;;;405:18;409:4;415:7;405:3;:18::i;:::-;404:19;396:28;;;;;;454:4;431;:11;;:20;443:7;431:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;296:167;;:::o;529:170::-;623:1;604:21;;:7;:21;;;;596:30;;;;;;640:18;644:4;650:7;640:3;:18::i;:::-;632:27;;;;;;689:5;666:4;:11;;:20;678:7;666:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;529:170;;:::o",
  "source": "//pragma solidity ^0.4.25;\npragma solidity >=0.4.21 <0.6.0;\n\nimport \"../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\";\n\nimport \"./accesscontrol/AirlineRole.sol\";\nimport \"./accesscontrol/PassengerRole.sol\";\n\n\ncontract FlightSuretyData is AirlineRole, PassengerRole {\n    using SafeMath for uint256;\n\n    /********************************************************************************************/\n    /*                                       DATA VARIABLES                                     */\n    /********************************************************************************************/\n\n    address private contractOwner;                                      // Account used to deploy contract\n    bool private operational = true;                                    // Blocks all state changes throughout the contract if false\n\n    uint minimumAirlines = 4;                     // number of airlines that can be added without consensus\n\n\n    struct Airline {\n        address airlineAccount;\n        string companyName;\n        bool isRegistered;\n        bool isFunded;\n        uint256 votes;\n        mapping(address => bool) voters;                    // track airlines that have already voted\n    }\n    /********************************************************************************************/\n    /*                                       EVENT DEFINITIONS                                  */\n    /********************************************************************************************/\n\n    /**\n    * @dev Constructor\n    *      The deploying account becomes contractOwner\n    */\n    constructor ()\n        public\n    {\n        contractOwner = msg.sender;\n    }\n\n    /********************************************************************************************/\n    /*                                       FUNCTION MODIFIERS                                 */\n    /********************************************************************************************/\n\n    // Modifiers help avoid duplication of code. They are typically used to validate something\n    // before a function is allowed to be executed.\n\n    /**\n    * @dev Modifier that requires the \"operational\" boolean variable to be \"true\"\n    *      This is used on all state changing functions to pause the contract in\n    *      the event there is an issue that needs to be fixed\n    */\n    modifier requireIsOperational()\n    {\n        require(operational, \"Contract is currently not operational\");\n        _;  // All modifiers require an \"_\" which indicates where the function body will be added\n    }\n\n    /**\n    * @dev Modifier that requires the \"ContractOwner\" account to be the function caller\n    */\n    modifier requireContractOwner()\n    {\n        require(msg.sender == contractOwner, \"Caller is not contract owner\");\n        _;\n    }\n\n    /********************************************************************************************/\n    /*                                       UTILITY FUNCTIONS                                  */\n    /********************************************************************************************/\n\n    /**\n    * @dev Get operating status of contract\n    *\n    * @return A bool that is the current operating status\n    */\n    function isOperational()\n        public\n        view\n        returns(bool)\n    {\n        return operational;\n    }\n\n\n    /**\n    * @dev Sets contract operations on/off\n    *\n    * When operational mode is disabled, all write transactions except for this one will fail\n    */\n    function setOperatingStatus(\n            bool mode )\n        external\n        requireContractOwner\n    {\n        operational = mode;\n    }\n\n    /********************************************************************************************/\n    /*                                     SMART CONTRACT FUNCTIONS                             */\n    /********************************************************************************************/\n\n   /**\n    * @dev Add an airline to the registration queue\n    *      Can only be called from FlightSuretyApp contract\n    *\n    */\n    function registerAirline()\n        external\n        view\n        requireIsOperational\n    {\n    }\n\n\n   /**\n    * @dev Buy insurance for a flight\n    *\n    */   \n    function buy()\n        external\n        payable\n    {\n\n    }\n\n    /**\n     *  @dev Credits payouts to insurees\n    */\n    function creditInsurees()\n        external\n        pure\n    {\n    }\n    \n\n    /**\n     *  @dev Transfers eligible payout funds to insuree\n     *\n    */\n    function pay()\n        external\n        pure\n    {\n    }\n\n   /**\n    * @dev Initial funding for the insurance. Unless there are too many delayed flights\n    *      resulting in insurance payouts, the contract should be self-sustaining\n    *\n    */   \n    function fund()\n        public\n        payable\n    {\n    }\n\n    function getFlightKey(\n            address airline,\n            string memory flight,\n            uint256 timestamp )\n        pure\n        internal\n        returns(bytes32)\n    {\n        return keccak256(abi.encodePacked(airline, flight, timestamp));\n    }\n\n    /**\n    * @dev Fallback function for funding smart contract.\n    *\n    */\n    function()\n        external \n        payable \n    {\n        fund();\n    }\n\n\n}\n\n",
  "sourcePath": "/home/hajime/git/BlockchainDevND/projects/project_FlightSurety/contracts/FlightSuretyData.sol",
  "ast": {
    "absolutePath": "/home/hajime/git/BlockchainDevND/projects/project_FlightSurety/contracts/FlightSuretyData.sol",
    "exportedSymbols": {
      "FlightSuretyData": [
        672
      ]
    },
    "id": 673,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 538,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "27:32:1"
      },
      {
        "absolutePath": "/home/hajime/git/BlockchainDevND/projects/project_FlightSurety/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 539,
        "nodeType": "ImportDirective",
        "scope": 673,
        "sourceUnit": 1163,
        "src": "61:75:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/hajime/git/BlockchainDevND/projects/project_FlightSurety/contracts/accesscontrol/AirlineRole.sol",
        "file": "./accesscontrol/AirlineRole.sol",
        "id": 540,
        "nodeType": "ImportDirective",
        "scope": 673,
        "sourceUnit": 833,
        "src": "138:41:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/hajime/git/BlockchainDevND/projects/project_FlightSurety/contracts/accesscontrol/PassengerRole.sol",
        "file": "./accesscontrol/PassengerRole.sol",
        "id": 541,
        "nodeType": "ImportDirective",
        "scope": 673,
        "sourceUnit": 936,
        "src": "180:43:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 542,
              "name": "AirlineRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 832,
              "src": "255:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AirlineRole_$832",
                "typeString": "contract AirlineRole"
              }
            },
            "id": 543,
            "nodeType": "InheritanceSpecifier",
            "src": "255:11:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 544,
              "name": "PassengerRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 935,
              "src": "268:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PassengerRole_$935",
                "typeString": "contract PassengerRole"
              }
            },
            "id": 545,
            "nodeType": "InheritanceSpecifier",
            "src": "268:13:1"
          }
        ],
        "contractDependencies": [
          832,
          935
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 672,
        "linearizedBaseContracts": [
          672,
          935,
          832
        ],
        "name": "FlightSuretyData",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 548,
            "libraryName": {
              "contractScope": null,
              "id": 546,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1162,
              "src": "294:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1162",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "288:27:1",
            "typeName": {
              "id": 547,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "307:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 550,
            "name": "contractOwner",
            "nodeType": "VariableDeclaration",
            "scope": 672,
            "src": "619:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 549,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "619:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 553,
            "name": "operational",
            "nodeType": "VariableDeclaration",
            "scope": 672,
            "src": "726:31:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 551,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "726:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "74727565",
              "id": 552,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "753:4:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 556,
            "name": "minimumAirlines",
            "nodeType": "VariableDeclaration",
            "scope": 672,
            "src": "860:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 554,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "860:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "34",
              "id": 555,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "883:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4_by_1",
                "typeString": "int_const 4"
              },
              "value": "4"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "FlightSuretyData.Airline",
            "id": 571,
            "members": [
              {
                "constant": false,
                "id": 558,
                "name": "airlineAccount",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "995:22:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 557,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "995:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 560,
                "name": "companyName",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "1027:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 559,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1027:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 562,
                "name": "isRegistered",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "1055:17:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 561,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1055:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 564,
                "name": "isFunded",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "1082:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 563,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1082:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 566,
                "name": "votes",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "1105:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 565,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1105:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 570,
                "name": "voters",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "1128:31:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 569,
                  "keyType": {
                    "id": 567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1136:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1128:24:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueType": {
                    "id": 568,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1147:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Airline",
            "nodeType": "StructDefinition",
            "scope": 672,
            "src": "970:257:1",
            "visibility": "public"
          },
          {
            "body": {
              "id": 579,
              "nodeType": "Block",
              "src": "1657:43:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 574,
                      "name": "contractOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 550,
                      "src": "1667:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 575,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1177,
                        "src": "1683:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1683:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1667:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 578,
                  "nodeType": "ExpressionStatement",
                  "src": "1667:26:1"
                }
              ]
            },
            "documentation": "@dev Constructor\n     The deploying account becomes contractOwner",
            "id": 580,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1635:2:1"
            },
            "returnParameters": {
              "id": 573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1657:0:1"
            },
            "scope": 672,
            "src": "1623:77:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 588,
              "nodeType": "Block",
              "src": "2428:176:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 583,
                        "name": "operational",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 553,
                        "src": "2446:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e74726163742069732063757272656e746c79206e6f74206f7065726174696f6e616c",
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2459:39:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a944ac63656791076c14949470b85bdffa60627db8794c94b1d70a12e2e21886",
                          "typeString": "literal_string \"Contract is currently not operational\""
                        },
                        "value": "Contract is currently not operational"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a944ac63656791076c14949470b85bdffa60627db8794c94b1d70a12e2e21886",
                          "typeString": "literal_string \"Contract is currently not operational\""
                        }
                      ],
                      "id": 582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1180,
                        1181
                      ],
                      "referencedDeclaration": 1181,
                      "src": "2438:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2438:61:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 586,
                  "nodeType": "ExpressionStatement",
                  "src": "2438:61:1"
                },
                {
                  "id": 587,
                  "nodeType": "PlaceholderStatement",
                  "src": "2509:1:1"
                }
              ]
            },
            "documentation": "@dev Modifier that requires the \"operational\" boolean variable to be \"true\"\n     This is used on all state changing functions to pause the contract in\n     the event there is an issue that needs to be fixed",
            "id": 589,
            "name": "requireIsOperational",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2421:2:1"
            },
            "src": "2392:212:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 600,
              "nodeType": "Block",
              "src": "2749:96:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 592,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1177,
                            "src": "2767:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2767:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 594,
                          "name": "contractOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 550,
                          "src": "2781:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2767:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616c6c6572206973206e6f7420636f6e7472616374206f776e6572",
                        "id": 596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2796:30:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad5b8255218fc9200bf271049bc5472a1a7a8192290eba60272e432e608ceea3",
                          "typeString": "literal_string \"Caller is not contract owner\""
                        },
                        "value": "Caller is not contract owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad5b8255218fc9200bf271049bc5472a1a7a8192290eba60272e432e608ceea3",
                          "typeString": "literal_string \"Caller is not contract owner\""
                        }
                      ],
                      "id": 591,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1180,
                        1181
                      ],
                      "referencedDeclaration": 1181,
                      "src": "2759:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2759:68:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 598,
                  "nodeType": "ExpressionStatement",
                  "src": "2759:68:1"
                },
                {
                  "id": 599,
                  "nodeType": "PlaceholderStatement",
                  "src": "2837:1:1"
                }
              ]
            },
            "documentation": "@dev Modifier that requires the \"ContractOwner\" account to be the function caller",
            "id": 601,
            "name": "requireContractOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2742:2:1"
            },
            "src": "2713:132:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 608,
              "nodeType": "Block",
              "src": "3351:35:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 606,
                    "name": "operational",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 553,
                    "src": "3368:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 605,
                  "id": 607,
                  "nodeType": "Return",
                  "src": "3361:18:1"
                }
              ]
            },
            "documentation": "@dev Get operating status of contract\n    * @return A bool that is the current operating status",
            "id": 609,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOperational",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 602,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3294:2:1"
            },
            "returnParameters": {
              "id": 605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 604,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "3341:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 603,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3341:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3340:6:1"
            },
            "scope": 672,
            "src": "3272:114:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 620,
              "nodeType": "Block",
              "src": "3654:35:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 616,
                      "name": "operational",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 553,
                      "src": "3664:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 617,
                      "name": "mode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 611,
                      "src": "3678:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3664:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 619,
                  "nodeType": "ExpressionStatement",
                  "src": "3664:18:1"
                }
              ]
            },
            "documentation": "@dev Sets contract operations on/off\n    * When operational mode is disabled, all write transactions except for this one will fail",
            "id": 621,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 614,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 613,
                  "name": "requireContractOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 601,
                  "src": "3629:20:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3629:20:1"
              }
            ],
            "name": "setOperatingStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 611,
                  "name": "mode",
                  "nodeType": "VariableDeclaration",
                  "scope": 621,
                  "src": "3592:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 610,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3592:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3578:25:1"
            },
            "returnParameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3654:0:1"
            },
            "scope": 672,
            "src": "3551:138:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 626,
              "nodeType": "Block",
              "src": "4215:7:1",
              "statements": []
            },
            "documentation": "@dev Add an airline to the registration queue\n     Can only be called from FlightSuretyApp contract\n    ",
            "id": 627,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 624,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 623,
                  "name": "requireIsOperational",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 589,
                  "src": "4190:20:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4190:20:1"
              }
            ],
            "name": "registerAirline",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4149:2:1"
            },
            "returnParameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4215:0:1"
            },
            "scope": 672,
            "src": "4125:97:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 630,
              "nodeType": "Block",
              "src": "4342:8:1",
              "statements": []
            },
            "documentation": "@dev Buy insurance for a flight\n    ",
            "id": 631,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4302:2:1"
            },
            "returnParameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4342:0:1"
            },
            "scope": 672,
            "src": "4290:60:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 634,
              "nodeType": "Block",
              "src": "4472:7:1",
              "statements": []
            },
            "documentation": " @dev Credits payouts to insurees",
            "id": 635,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "creditInsurees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4435:2:1"
            },
            "returnParameters": {
              "id": 633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4472:0:1"
            },
            "scope": 672,
            "src": "4412:67:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 638,
              "nodeType": "Block",
              "src": "4617:7:1",
              "statements": []
            },
            "documentation": " @dev Transfers eligible payout funds to insuree\n    ",
            "id": 639,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4580:2:1"
            },
            "returnParameters": {
              "id": 637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4617:0:1"
            },
            "scope": 672,
            "src": "4568:56:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 642,
              "nodeType": "Block",
              "src": "4874:7:1",
              "statements": []
            },
            "documentation": "@dev Initial funding for the insurance. Unless there are too many delayed flights\n     resulting in insurance payouts, the contract should be self-sustaining\n    ",
            "id": 643,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fund",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4836:2:1"
            },
            "returnParameters": {
              "id": 641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4874:0:1"
            },
            "scope": 672,
            "src": "4823:58:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 663,
              "nodeType": "Block",
              "src": "5064:79:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 657,
                            "name": "airline",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 645,
                            "src": "5108:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 658,
                            "name": "flight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 647,
                            "src": "5117:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 659,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 649,
                            "src": "5125:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 655,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1164,
                            "src": "5091:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5091:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5091:44:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 654,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1171,
                      "src": "5081:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5081:55:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 653,
                  "id": 662,
                  "nodeType": "Return",
                  "src": "5074:62:1"
                }
              ]
            },
            "documentation": null,
            "id": 664,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFlightKey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 645,
                  "name": "airline",
                  "nodeType": "VariableDeclaration",
                  "scope": 664,
                  "src": "4922:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4922:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 647,
                  "name": "flight",
                  "nodeType": "VariableDeclaration",
                  "scope": 664,
                  "src": "4951:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4951:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 649,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 664,
                  "src": "4985:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 648,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4985:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4908:96:1"
            },
            "returnParameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 652,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 664,
                  "src": "5051:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 651,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5051:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5050:9:1"
            },
            "scope": 672,
            "src": "4887:256:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 670,
              "nodeType": "Block",
              "src": "5277:23:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 667,
                      "name": "fund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 643,
                      "src": "5287:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5287:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 669,
                  "nodeType": "ExpressionStatement",
                  "src": "5287:6:1"
                }
              ]
            },
            "documentation": "@dev Fallback function for funding smart contract.\n    ",
            "id": 671,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5235:2:1"
            },
            "returnParameters": {
              "id": 666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5277:0:1"
            },
            "scope": 672,
            "src": "5227:73:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 673,
        "src": "226:5078:1"
      }
    ],
    "src": "27:5279:1"
  },
  "legacyAST": {
    "absolutePath": "/home/hajime/git/BlockchainDevND/projects/project_FlightSurety/contracts/FlightSuretyData.sol",
    "exportedSymbols": {
      "FlightSuretyData": [
        672
      ]
    },
    "id": 673,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 538,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "27:32:1"
      },
      {
        "absolutePath": "/home/hajime/git/BlockchainDevND/projects/project_FlightSurety/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 539,
        "nodeType": "ImportDirective",
        "scope": 673,
        "sourceUnit": 1163,
        "src": "61:75:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/hajime/git/BlockchainDevND/projects/project_FlightSurety/contracts/accesscontrol/AirlineRole.sol",
        "file": "./accesscontrol/AirlineRole.sol",
        "id": 540,
        "nodeType": "ImportDirective",
        "scope": 673,
        "sourceUnit": 833,
        "src": "138:41:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/hajime/git/BlockchainDevND/projects/project_FlightSurety/contracts/accesscontrol/PassengerRole.sol",
        "file": "./accesscontrol/PassengerRole.sol",
        "id": 541,
        "nodeType": "ImportDirective",
        "scope": 673,
        "sourceUnit": 936,
        "src": "180:43:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 542,
              "name": "AirlineRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 832,
              "src": "255:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AirlineRole_$832",
                "typeString": "contract AirlineRole"
              }
            },
            "id": 543,
            "nodeType": "InheritanceSpecifier",
            "src": "255:11:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 544,
              "name": "PassengerRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 935,
              "src": "268:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PassengerRole_$935",
                "typeString": "contract PassengerRole"
              }
            },
            "id": 545,
            "nodeType": "InheritanceSpecifier",
            "src": "268:13:1"
          }
        ],
        "contractDependencies": [
          832,
          935
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 672,
        "linearizedBaseContracts": [
          672,
          935,
          832
        ],
        "name": "FlightSuretyData",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 548,
            "libraryName": {
              "contractScope": null,
              "id": 546,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1162,
              "src": "294:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1162",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "288:27:1",
            "typeName": {
              "id": 547,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "307:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 550,
            "name": "contractOwner",
            "nodeType": "VariableDeclaration",
            "scope": 672,
            "src": "619:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 549,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "619:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 553,
            "name": "operational",
            "nodeType": "VariableDeclaration",
            "scope": 672,
            "src": "726:31:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 551,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "726:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "74727565",
              "id": 552,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "753:4:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 556,
            "name": "minimumAirlines",
            "nodeType": "VariableDeclaration",
            "scope": 672,
            "src": "860:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 554,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "860:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "34",
              "id": 555,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "883:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4_by_1",
                "typeString": "int_const 4"
              },
              "value": "4"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "FlightSuretyData.Airline",
            "id": 571,
            "members": [
              {
                "constant": false,
                "id": 558,
                "name": "airlineAccount",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "995:22:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 557,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "995:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 560,
                "name": "companyName",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "1027:18:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 559,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1027:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 562,
                "name": "isRegistered",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "1055:17:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 561,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1055:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 564,
                "name": "isFunded",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "1082:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 563,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1082:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 566,
                "name": "votes",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "1105:13:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 565,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1105:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 570,
                "name": "voters",
                "nodeType": "VariableDeclaration",
                "scope": 571,
                "src": "1128:31:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "typeName": {
                  "id": 569,
                  "keyType": {
                    "id": 567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1136:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1128:24:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "valueType": {
                    "id": 568,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1147:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Airline",
            "nodeType": "StructDefinition",
            "scope": 672,
            "src": "970:257:1",
            "visibility": "public"
          },
          {
            "body": {
              "id": 579,
              "nodeType": "Block",
              "src": "1657:43:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 574,
                      "name": "contractOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 550,
                      "src": "1667:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 575,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1177,
                        "src": "1683:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1683:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1667:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 578,
                  "nodeType": "ExpressionStatement",
                  "src": "1667:26:1"
                }
              ]
            },
            "documentation": "@dev Constructor\n     The deploying account becomes contractOwner",
            "id": 580,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 572,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1635:2:1"
            },
            "returnParameters": {
              "id": 573,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1657:0:1"
            },
            "scope": 672,
            "src": "1623:77:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 588,
              "nodeType": "Block",
              "src": "2428:176:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 583,
                        "name": "operational",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 553,
                        "src": "2446:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e74726163742069732063757272656e746c79206e6f74206f7065726174696f6e616c",
                        "id": 584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2459:39:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a944ac63656791076c14949470b85bdffa60627db8794c94b1d70a12e2e21886",
                          "typeString": "literal_string \"Contract is currently not operational\""
                        },
                        "value": "Contract is currently not operational"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a944ac63656791076c14949470b85bdffa60627db8794c94b1d70a12e2e21886",
                          "typeString": "literal_string \"Contract is currently not operational\""
                        }
                      ],
                      "id": 582,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1180,
                        1181
                      ],
                      "referencedDeclaration": 1181,
                      "src": "2438:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2438:61:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 586,
                  "nodeType": "ExpressionStatement",
                  "src": "2438:61:1"
                },
                {
                  "id": 587,
                  "nodeType": "PlaceholderStatement",
                  "src": "2509:1:1"
                }
              ]
            },
            "documentation": "@dev Modifier that requires the \"operational\" boolean variable to be \"true\"\n     This is used on all state changing functions to pause the contract in\n     the event there is an issue that needs to be fixed",
            "id": 589,
            "name": "requireIsOperational",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2421:2:1"
            },
            "src": "2392:212:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 600,
              "nodeType": "Block",
              "src": "2749:96:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 592,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1177,
                            "src": "2767:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2767:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 594,
                          "name": "contractOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 550,
                          "src": "2781:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2767:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616c6c6572206973206e6f7420636f6e7472616374206f776e6572",
                        "id": 596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2796:30:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad5b8255218fc9200bf271049bc5472a1a7a8192290eba60272e432e608ceea3",
                          "typeString": "literal_string \"Caller is not contract owner\""
                        },
                        "value": "Caller is not contract owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad5b8255218fc9200bf271049bc5472a1a7a8192290eba60272e432e608ceea3",
                          "typeString": "literal_string \"Caller is not contract owner\""
                        }
                      ],
                      "id": 591,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1180,
                        1181
                      ],
                      "referencedDeclaration": 1181,
                      "src": "2759:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2759:68:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 598,
                  "nodeType": "ExpressionStatement",
                  "src": "2759:68:1"
                },
                {
                  "id": 599,
                  "nodeType": "PlaceholderStatement",
                  "src": "2837:1:1"
                }
              ]
            },
            "documentation": "@dev Modifier that requires the \"ContractOwner\" account to be the function caller",
            "id": 601,
            "name": "requireContractOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2742:2:1"
            },
            "src": "2713:132:1",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 608,
              "nodeType": "Block",
              "src": "3351:35:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 606,
                    "name": "operational",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 553,
                    "src": "3368:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 605,
                  "id": 607,
                  "nodeType": "Return",
                  "src": "3361:18:1"
                }
              ]
            },
            "documentation": "@dev Get operating status of contract\n    * @return A bool that is the current operating status",
            "id": 609,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOperational",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 602,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3294:2:1"
            },
            "returnParameters": {
              "id": 605,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 604,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "3341:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 603,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3341:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3340:6:1"
            },
            "scope": 672,
            "src": "3272:114:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 620,
              "nodeType": "Block",
              "src": "3654:35:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 616,
                      "name": "operational",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 553,
                      "src": "3664:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 617,
                      "name": "mode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 611,
                      "src": "3678:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3664:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 619,
                  "nodeType": "ExpressionStatement",
                  "src": "3664:18:1"
                }
              ]
            },
            "documentation": "@dev Sets contract operations on/off\n    * When operational mode is disabled, all write transactions except for this one will fail",
            "id": 621,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 614,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 613,
                  "name": "requireContractOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 601,
                  "src": "3629:20:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3629:20:1"
              }
            ],
            "name": "setOperatingStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 611,
                  "name": "mode",
                  "nodeType": "VariableDeclaration",
                  "scope": 621,
                  "src": "3592:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 610,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3592:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3578:25:1"
            },
            "returnParameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3654:0:1"
            },
            "scope": 672,
            "src": "3551:138:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 626,
              "nodeType": "Block",
              "src": "4215:7:1",
              "statements": []
            },
            "documentation": "@dev Add an airline to the registration queue\n     Can only be called from FlightSuretyApp contract\n    ",
            "id": 627,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 624,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 623,
                  "name": "requireIsOperational",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 589,
                  "src": "4190:20:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4190:20:1"
              }
            ],
            "name": "registerAirline",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4149:2:1"
            },
            "returnParameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4215:0:1"
            },
            "scope": 672,
            "src": "4125:97:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 630,
              "nodeType": "Block",
              "src": "4342:8:1",
              "statements": []
            },
            "documentation": "@dev Buy insurance for a flight\n    ",
            "id": 631,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buy",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4302:2:1"
            },
            "returnParameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4342:0:1"
            },
            "scope": 672,
            "src": "4290:60:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 634,
              "nodeType": "Block",
              "src": "4472:7:1",
              "statements": []
            },
            "documentation": " @dev Credits payouts to insurees",
            "id": 635,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "creditInsurees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4435:2:1"
            },
            "returnParameters": {
              "id": 633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4472:0:1"
            },
            "scope": 672,
            "src": "4412:67:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 638,
              "nodeType": "Block",
              "src": "4617:7:1",
              "statements": []
            },
            "documentation": " @dev Transfers eligible payout funds to insuree\n    ",
            "id": 639,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4580:2:1"
            },
            "returnParameters": {
              "id": 637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4617:0:1"
            },
            "scope": 672,
            "src": "4568:56:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 642,
              "nodeType": "Block",
              "src": "4874:7:1",
              "statements": []
            },
            "documentation": "@dev Initial funding for the insurance. Unless there are too many delayed flights\n     resulting in insurance payouts, the contract should be self-sustaining\n    ",
            "id": 643,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fund",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4836:2:1"
            },
            "returnParameters": {
              "id": 641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4874:0:1"
            },
            "scope": 672,
            "src": "4823:58:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 663,
              "nodeType": "Block",
              "src": "5064:79:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 657,
                            "name": "airline",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 645,
                            "src": "5108:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 658,
                            "name": "flight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 647,
                            "src": "5117:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 659,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 649,
                            "src": "5125:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 655,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1164,
                            "src": "5091:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5091:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5091:44:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 654,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1171,
                      "src": "5081:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5081:55:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 653,
                  "id": 662,
                  "nodeType": "Return",
                  "src": "5074:62:1"
                }
              ]
            },
            "documentation": null,
            "id": 664,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFlightKey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 645,
                  "name": "airline",
                  "nodeType": "VariableDeclaration",
                  "scope": 664,
                  "src": "4922:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4922:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 647,
                  "name": "flight",
                  "nodeType": "VariableDeclaration",
                  "scope": 664,
                  "src": "4951:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 646,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4951:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 649,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 664,
                  "src": "4985:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 648,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4985:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4908:96:1"
            },
            "returnParameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 652,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 664,
                  "src": "5051:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 651,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5051:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5050:9:1"
            },
            "scope": 672,
            "src": "4887:256:1",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 670,
              "nodeType": "Block",
              "src": "5277:23:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 667,
                      "name": "fund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 643,
                      "src": "5287:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5287:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 669,
                  "nodeType": "ExpressionStatement",
                  "src": "5287:6:1"
                }
              ]
            },
            "documentation": "@dev Fallback function for funding smart contract.\n    ",
            "id": 671,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5235:2:1"
            },
            "returnParameters": {
              "id": 666,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5277:0:1"
            },
            "scope": 672,
            "src": "5227:73:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 673,
        "src": "226:5078:1"
      }
    ],
    "src": "27:5279:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x621e907b0b61084a1f2660c5627f80111a59ab9291ce55345a6145057946e9cc": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "PassengerAdded",
          "type": "event",
          "signature": "0x621e907b0b61084a1f2660c5627f80111a59ab9291ce55345a6145057946e9cc"
        },
        "0x97444fa4b41e1f5173a20f39d2102723bc0067ea6342d82913e0b07dc7b19a3d": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "PassengerRemoved",
          "type": "event",
          "signature": "0x97444fa4b41e1f5173a20f39d2102723bc0067ea6342d82913e0b07dc7b19a3d"
        },
        "0xb55d65ff58a8ae5e1643396e49a8aa01aec7a0766f887812148a230464a41c8f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "AirlineAdded",
          "type": "event",
          "signature": "0xb55d65ff58a8ae5e1643396e49a8aa01aec7a0766f887812148a230464a41c8f"
        },
        "0x30b877178d01ecce7800e37cb6dfbaad2e641045ee2ba52a50458ca4205bafbf": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "AirlineRemoved",
          "type": "event",
          "signature": "0x30b877178d01ecce7800e37cb6dfbaad2e641045ee2ba52a50458ca4205bafbf"
        }
      },
      "links": {},
      "address": "0x0899065899A1dB711587066937084CB2d8206CC2",
      "transactionHash": "0xf54c3e581fd7caae345fef08b9318f7a758300bad2f0e2eed2bf168711982ef8"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-09-15T07:49:59.301Z",
  "devdoc": {
    "methods": {
      "buy()": {
        "details": "Buy insurance for a flight    "
      },
      "constructor": {
        "details": "Constructor     The deploying account becomes contractOwner"
      },
      "creditInsurees()": {
        "details": "Credits payouts to insurees"
      },
      "fund()": {
        "details": "Initial funding for the insurance. Unless there are too many delayed flights     resulting in insurance payouts, the contract should be self-sustaining    "
      },
      "isOperational()": {
        "details": "Get operating status of contract",
        "return": "A bool that is the current operating status"
      },
      "pay()": {
        "details": "Transfers eligible payout funds to insuree    "
      },
      "registerAirline()": {
        "details": "Add an airline to the registration queue     Can only be called from FlightSuretyApp contract    "
      },
      "setOperatingStatus(bool)": {
        "details": "Sets contract operations on/off    * When operational mode is disabled, all write transactions except for this one will fail"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}